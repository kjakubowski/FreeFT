/* Copyright (C) 2013 Krzysztof Jakubowski <nadult@fastmail.fm>

   This file is part of FreeFt.

   FreeFt is free software; you can redistribute it and/or modify it under the terms of the
   GNU General Public License as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   FreeFt is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
   even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License along with this program.
   If not, see http://www.gnu.org/licenses/ . */

#ifndef GFX_FONT_H
#define GFX_FONT_H

#include <baselib.h>
#include "gfx/device.h"

namespace gfx
{
	using namespace baselib;

//TODO: fonts base on freetype
// Based on fonts generated by BMFont
	class Font: public Resource
	{
public:
		Font() { }

		void serialize(Serializer&);
		void loadFromXML(const XMLDocument&);

		IRect evalExtents(const char *str) const;

		// Returns number of quads generated
		// For every quad it generates: 4 * 2 floats in each buffer
		// bufSize is number of float pairs that fits in the buffer
		int genQuads(const char *str, float2 *out_pos, float2 *out_uv, int buffer_size) const;

		// strings should be encoded in UTF-8
		void draw(int2 pos, Color col, const char *format, ...) const;
		void drawShadowed(int2 pos, Color col, Color shadow, const char *format, ...) const;

		int lineHeight() const { return m_line_height; }
		int textBase() const { return m_text_base; }

		static ResourceMgr<Font> mgr;

private:
		struct Character {
			int2 tex_pos;
			int2 size;
			int2 offset;
			int x_advance;
		};
		
		static ResourceMgr<DTexture> tex_mgr;

		//TODO: better representation? hash table maybe?
		std::map<int, Character> m_chars;
		std::map<pair<int, int>, int> m_kernings;
		PTexture m_texture;

		string m_face_name;
		int2 m_tex_size;
		int m_line_height;
		int m_text_base;
	};

	typedef Ptr<Font> PFont;

}

#endif
