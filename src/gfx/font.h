#ifndef GFXLIB_FONT_H
#define GFXLIB_FONT_H

#include <baselib.h>
#include "gfx/device.h"

namespace gfx
{
	using namespace baselib;

	// TODO: dodac klase font kursor do pozycjonowania tekstow wielowierszowych

// Based on fonts generated by BMFont
	class Font: public Resource
	{
public:
		Font() { }

		void Serialize(Serializer&);

		// Returns number of quads generated
		// For every quad it generates: 4 * 2 floats in each buffer
		// bufSize is number of float pairs that fits in the buffer
		size_t GenQuads(const char *str, float2 *posBuf, float2 *uvBuf, size_t bufSize) const;
		void Draw(const char *str) const;

	//TODO: jakis dziwny bug wstringize jak sie to zapoda
	//	template <typename... Args>
	//	void Draw(const Args ...args) const { Draw((string)Stringize(args...)); }

	//	template <typename... Args>
	//	void DrawAt(int2 pos, const Args& ...args) const { SetPos(pos); Draw((string)Stringize(args...)); }

		void SetPos(int2 v) const { pos = v; }
		void AddPos(int2 v) const { pos += float2(v); }
		void SetSize(int2 v) const { size = v; }

		static ResourceMgr<Font> mgr;
		static ResourceMgr<DTexture> tex_mgr;

private:
		mutable float2 pos, size;

		float2 chars[256 * 2];
		float2 offset[256];
		float  xadvance[256];
	};

	typedef Ptr<Font> PFont;

}

#endif
